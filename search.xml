<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>article_name</title>
    <url>/2021/3Q63Y87/</url>
    <content><![CDATA[<p><img src="/2021/3Q63Y87/hh.jpg" alt="相对路径"></p>
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/151FCAP/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
<h3 id="images1"><a href="#images1" class="headerlink" title="images1"></a>images1</h3><p><img src="https://i.loli.net/2021/11/16/OzTLpVuc7IPHtkJ.jpg" alt="绝对路径"></p>
<h3 id="images2"><a href="#images2" class="headerlink" title="images2"></a>images2</h3><p><img src="images/avatar.jpg" alt="相对路径"></p>
]]></content>
      <categories>
        <category>test</category>
      </categories>
      <tags>
        <tag>first</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo编写博客问题</title>
    <url>/2022/3CZHVK4/</url>
    <content><![CDATA[<h3 id="创建并部署博客的基本步骤"><a href="#创建并部署博客的基本步骤" class="headerlink" title="创建并部署博客的基本步骤"></a>创建并部署博客的基本步骤</h3><ol>
<li><code>hexo new **</code><br>创建一个名字为**的博客，具体title也可在文档中修改</li>
<li><code>hexo clean</code><br>清除缓存文件 db.json 和已生成的静态文件 public</li>
<li><code>hexo g</code> <code>hexo generate </code>的缩写</li>
</ol>
<ul>
<li>生成网站静态文件到默认设置的 public 文件夹。</li>
<li>便于查看网站生成的静态文件或者手动部署网站；</li>
<li>如果使用自动部署，不需要先执行该命令；</li>
</ul>
<ol start="4">
<li><code>hexo s</code> <code>hexo server</code>的缩写</li>
</ol>
<ul>
<li><p>启动本地服务器，用于预览主题。默认地址： <a href="http://localhost:4000/">http://localhost:4000/</a></p>
</li>
<li><p>预览的同时可以修改文章内容或主题代码，保存后刷新页面即可</p>
</li>
</ul>
<ol start="5">
<li><code>hexo d</code> <code>hexo deploy</code>的缩写</li>
</ol>
<ul>
<li>自动生成网站静态文件，并部署到设定的仓库。<h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3></li>
<li><code>hexo s</code>有时候会出现以下报错<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FATAL Port 4000 has been used. Try other port instead.</span><br><span class="line">FATAL &#123;</span><br><span class="line">  err: Error: listen EADDRINUSE: address already in use :::4000</span><br><span class="line">      at Server.setupListenHandle [as _listen2] (node:net:1334:16)</span><br><span class="line">      at listenInCluster (node:net:1382:12)</span><br><span class="line">      at Server.listen (node:net:1469:7)</span><br></pre></td></tr></table></figure>
可以在站点下的文件_config.yml内加上如下代码更改hexo-server运行时的端口号：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server:</span><br><span class="line">    port: 40401</span><br><span class="line">    compress: true</span><br><span class="line">    header: true</span><br></pre></td></tr></table></figure>
或者使用命令<code>hexo serve -p 更改的端口号</code></li>
</ul>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>image.md</title>
    <url>/2021/6FNRGE/</url>
    <content><![CDATA[<p>相对路径<br><img src="images/kangna.jpg" alt="相对路径"><br>绝对路径<br><img src="https://i.loli.net/2021/11/20/frnI2xLOkJm7KTq.jpg" alt="绝对路径"></p>
]]></content>
  </entry>
  <entry>
    <title>html+css基础</title>
    <url>/2022/1259MQK/</url>
    <content><![CDATA[<h2 id="一，Html和CSS的关系"><a href="#一，Html和CSS的关系" class="headerlink" title="一，Html和CSS的关系"></a>一，Html和CSS的关系</h2><ul>
<li>HTML是网页内容的载体。内容就是网页制作者放在页面上想要让用户浏览的信息，可以包含文字、图片、视频等。</li>
<li> CSS样式是表现。就像网页的外衣。比如，标题字体、颜色变化，或为标题加入背景图片、边框等。所有这些用来改变内容外观的东西称之为表现。</li>
<li>JavaScript是用来实现网页上的特效效果。如：鼠标滑过弹出下拉菜单。或鼠标滑过表格的背景颜色改变。还有焦点新闻（新闻图片）的轮换。可以这么理解，有动画的，有交互的一般都是用JavaScript来实现的。</li>
</ul>
<ul>
<li>HTML标签不区分大小写，<code>&lt;h1&gt;</code>和<code>&lt;H1&gt;</code>是一样的，但建议小写，因为大部分程序员都以小写为准。</li>
<li>一个HTML文件是有自己固定的结构的。</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span>...<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>...<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>代码讲解：</p>
<ol>
<li><code>&lt;html&gt;&lt;/html&gt;</code>称为根标签，所有的网页标签都在<code>&lt;html&gt;&lt;/html&gt;</code>中。</li>
<li><code>&lt;head&gt; </code>标签用于定义文档的头部，它是所有头部元素的容器。头部元素有<code>&lt;title&gt;、&lt;script&gt;、 &lt;style&gt;、&lt;link&gt;、 &lt;meta&gt;</code>等标签，头部标签在下一小节中会有详细介绍。</li>
<li> 在<code>&lt;body&gt;和&lt;/body&gt;</code>标签之间的内容是网页的主要内容，如<code>&lt;h1&gt;、&lt;p&gt;、&lt;a&gt;、&lt;img&gt;</code>等网页内容标签，在这里的标签中的内容会在浏览器中显示出来。</li>
</ol>
<ul>
<li><p>下面这些标签可用在 head 部分：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>...<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span>...<span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span>...<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>代码注释不仅方便程序员自己回忆起以前代码的用途，还可以帮助其他程序员很快的读懂你的程序的功能，方便多人合作开发网页代码。<br>语法：</p>
</li>
<li><p>CSS注释代码<br>就像在Html的注释一样，在CSS中也有注释语句：用/<em>注释语句</em>/来标明（Html中使用<code>&lt;!--注释语句--&gt;</code>)</p>
</li>
<li><p>语义化：说的通俗点就是：明白每个标签的用途（在什么情况下我可以使用这个标签才合理）比如，网页上的文章的标题就得用标题标签，网页上的各个栏目的栏目名称也可以使用标题标签。</p>
<ul>
<li>语义化的作用<br>1）. 更容易被搜索引擎收录。<br>2）. 更容易让屏幕阅读器读出网页内容。</li>
</ul>
</li>
</ul>
<h2 id="二，认识标签（第一部分）"><a href="#二，认识标签（第一部分）" class="headerlink" title="二，认识标签（第一部分）"></a>二，认识标签（第一部分）</h2><ul>
<li><p>如果想在网页上显示文章，这时就需要<code>&lt;p&gt;</code>标签了，把文章的段落放到<code>&lt;p&gt;</code>标签中。<br>语法：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>段落文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p><hx>标签来制作文章的标题。<br>标题标签一共有6个，h1、h2、h3、h4、h5、h6分别为一级标题、二级标题、三级标题、四级标题、五级标题、六级标题。并且依据重要性递减。<code>&lt;h1&gt;</code>是最高的等级。<br>语法：</hx></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hx</span>&gt;</span>标题文本<span class="tag">&lt;/<span class="name">hx</span>&gt;</span> (x为1-6)</span><br></pre></td></tr></table></figure>
<p>文章的标题前面已经说过了，可以使用标题标签，另外网页上的各个栏目的标题也可使用它们</p>
</li>
<li><p>有了段落又有了标题，现在如果想在一段话中特别强调某几个文字，这时候就可以用到<code>&lt;em&gt;</code>或<code>&lt;strong&gt;</code>标签。但两者在强调的语气上有区别:<code>&lt;em&gt;</code> 表示强调，<code>&lt;strong&gt;</code> 表示更强烈的强调。并且在浏览器中<code>&lt;em&gt;</code> 默认用斜体表示，<code>&lt;strong&gt;</code> 用粗体表示。两个标签相比，目前国内前端程序员更喜欢使用<code>&lt;strong&gt;</code>表示强调</p>
<p>  <code> &lt;em&gt;、&lt;strong&gt;、&lt;span&gt;</code>的区别：</p>
<ol>
<li><code>&lt;em&gt;</code>和<code>&lt;strong&gt;</code>标签是为了强调一段话中的关键字时使用，它们的语义是强调。</li>
<li><code>&lt;span&gt;</code>标签是没有语义的，它的作用就是为了设置单独的样式用的，把一段话圈起来，然后用css设置样式。</li>
</ol>
</li>
<li><p>q标签，短文本引用<br>比如在你的网页的文章里想引用某个作家的一句诗，这样会使你的文章更加出彩，那么<q>标签是你所需要的。<br>语法:</q></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">q</span>&gt;</span>引用文本<span class="tag">&lt;/<span class="name">q</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ul>
<p>1.注意要引用的文本不用加双引号，浏览器会对q标签自动添加双引号。<br>  2.注意这里用<q>标签的真正关键点不是它的默认样式双引号（如果这样我们不如自己在键盘上输入双引号就行了），而是它的语义：引用别人的话</q></p>
<ul>
<li><p>blockquote标签，长文本引用<br><code>&lt;blockquote&gt;</code>的作用也是引用别人的文本。但它是对长文本的引用<br><code>&lt;q&gt;</code>标签是对简短文本的引用，比如说引用一句话就用到<code>&lt;q&gt;</code>标签。<br>语法:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span>引用文本<span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>浏览器对<code>&lt;blockquote&gt;</code>标签的解析是缩进样式</p>
</li>
<li><p>换行标签<br><br><code>&lt;br/&gt;</code>标签作用相当于word文档中的回车。<br>分割线标签<code>&lt;hr/&gt;</code>,<code>&lt;hr/&gt;</code>标签和<code>&lt;br/&gt;</code>标签一样也是一个空标签，所以只有一个开始标签，没有结束标签。<br><code>&lt;hr/&gt;</code>标签的在浏览器中的默认样式线条比较粗，颜色为灰色，可能有些人觉得这种样式不美观，没有关系，这些外在样式在我们以后学习了css样式表之后，都可以对其修改。</p>
</li>
<li><p>html特殊字符<br>空格：<code>&amp;nbsp;</code> (;分号必不可少)</p>
</li>
<li><p>address标签，为网页加入地址信息<br>语法：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">address</span>&gt;</span>地址信息<span class="tag">&lt;/<span class="name">address</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>如：</p>
<address>北京市西城区德外大街10号</address>
在浏览器上显示的样式为斜体，如果不喜欢斜体，当然可以，可以在后面的课程中使用css样式来修改`<address>`标签的默认样式</address></li>
<li><p>在介绍语言技术的网站中，必免不了在网页中显示一些计算机专业的编程代码，当代码为一行代码时，你就可以使用<code>&lt;code&gt;</code>标签了，如下面例子：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">code</span>&gt;</span>var i=i+300;<span class="tag">&lt;/<span class="name">code</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>语法：<br><code>&lt;code&gt;</code>代码语言<code>&lt;/code&gt;</code><br>注意：在文章中一般如果要插入多行代码时不能使用<code>&lt;code&gt;</code>标签，如果是多行代码，可以使用<code>&lt;pre&gt;</code>标签。<br><code>&lt;pre&gt;</code> 标签的主要作用:预格式化的文本。被包围在 pre 元素中的文本通常会保留空格和换行符。如果用以前的方法，回车需要输入<code>&lt;br&gt;</code>签，空格需要输入<code>&amp;nbsp;</code>。<br>注意：<code>&lt;pre&gt;</code> 标签不只是为显示计算机的源代码时用的，在你需要在网页中预显示格式时都可以使用它，只是<code>&lt;pre&gt;</code>标签的一个常见应用就是用来展示计算机的源代码。</p>
<h2 id="三，认识标签（第二部分）"><a href="#三，认识标签（第二部分）" class="headerlink" title="三，认识标签（第二部分）"></a>三，认识标签（第二部分）</h2></li>
<li><p>无序列表<br>ul-li是没有前后顺序的信息列表。<br>语法：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>信息<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>信息<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">......</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>举例：</p>
<ul>
<li>精彩少年</li>
<li>美丽突然出现</li>
<li>触动心灵的旋律</li>
</ul></li>
</ul>
<p> ul-li在网页中显示的默认样式一般为：每项li前都自带一个圆点</p>
<ul>
<li>有序列表<br>语法：<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>信息<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>信息<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">......</span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure>
举例：<br>下面是一个热点课程下载排行榜：<ol>
<li>前端开发面试心法 </li>
<li>零基础学习html</li>
<li>JavaScript全攻略</li>
</ol>
<ol></ol></li>
</ul>
<p>在网页中显示的默认样式一般为：每项<code>&lt;li&gt;</code>前都自带一个序号，序号默认从1开</p>
<ul>
<li><div>容器标签
在网页制作过程过中，可以把一些独立的逻辑部分划分出来，放在一个`<div>`标签中，这个`<div>`标签的作用就相当于一个容器。
语法：
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>…<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
确定逻辑部分：
什么是逻辑部分？它是页面上相互关联的一组元素。如网页中的独立的栏目版块，就是一个典型的逻辑部分。如下图所示：图中用红色边框标出的部分就是一个逻辑部分，就可以使用`<div>`标签作为容器
注释：`<div> `是一个块级元素，也就是说，浏览器通常会在 div 元素前后放置一个换行符。</div></div></div></div></div></li>
<li><p>创建表格的五个元素：<br>table、tbody、tr、th、td</p>
</li>
</ul>
<ol>
<li><code>&lt;table&gt;…&lt;/table&gt;</code>：整个表格以<code>&lt;table&gt;</code>标记开始、<code>&lt;/table&gt;</code>标记结束。</li>
<li>、<code>&lt;tbody&gt;…&lt;/tbody&gt;</code>：当表格内容非常多时，表格会下载一点显示一点，但如果加上<code>&lt;tbody&gt;</code>标签后，这个表格就要等表格内容全部下载完才会显示。如右侧代码编辑器中的代码。（这个标签基本上不怎么用了）</li>
<li>、<code>&lt;tr&gt;…&lt;/tr&gt;</code>：表格的一行，所以有几对tr 表格就有几行。</li>
<li>、<code>&lt;td&gt;…&lt;/td&gt;</code>：表格的一个单元格，一行中包含几对<td>…</td><td>，说明一行中就有几列。</td></li>
<li><code>&lt;th&gt;…&lt;/th&gt;</code>：表格的头部的一个单元格，表格表头。</li>
<li>、表格中列的个数，取决于一行中数据单元格的个数。<br>表格还是需要添加一些标签进行优化，可以添加标题和摘要<br><code>&lt;table summary=&quot;本表格记录2012年到2013年库存记录，记录包括U盘和耳机库存量&quot;&gt;</code><br><code>&lt;caption&gt;2012年到2013年库存记录&lt;/caption&gt;</code></li>
</ol>
<ul>
<li>使用<code>&lt;a&gt;</code>标签，链接到别一个页面<br>使用<code>&lt;a&gt;</code>标签可实现超链接，它在网页制作中可以说是无处不在，只要有链接的地方，就会有这个标签。<br>语法：<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">”目标网址”</span>&gt;</span>链接显示的文本<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
例如：<br><code>&lt;a href = &quot;http://www.imooc.com&quot;&gt;click here!&lt;/a&gt;</code><br><a href="http://www.imooc.com">click here!</a><br>上面例子作用是单击click here!文字，网页链接到<a href="http://www.imooc.com这个网页./">http://www.imooc.com这个网页。</a></li>
<li>认识<code>&lt;img&gt;</code>标签，为网页插入图片<br>在网页的制作中为使网页炫丽美观，肯定是缺少不了图片，可以使用<img>标签来插入图片。<br>语法：<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;图片地址&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;下载失败时的替换文本&quot;</span> <span class="attr">title</span> = <span class="string">&quot;提示文本&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
举例：<br><code>&lt;img src = &quot;https://tse2-mm.cn.bing.net/th/id/OIP-C.O1CyeKs-ES3CZTfWbTjA2gHaEo?pid=ImgDet&amp;rs=1&quot; alt = &quot;My Image&quot; title = &quot;My Image&quot; /&gt;</code><img src="https://tse2-mm.cn.bing.net/th/id/OIP-C.O1CyeKs-ES3CZTfWbTjA2gHaEo?pid=ImgDet&rs=1" alt="My Image" title="My Image">
讲解：</li>
</ul>
<ol>
<li>src：标识图像的位置；</li>
<li>alt：指定图像的描述性文本，当图像不可见时（下载不成功时），可看到该属性指定的文本；title：提供在图像可见时对图像的描述(鼠标滑过图片时显示的文本)；</li>
<li>图像可以是GIF，PNG，JPEG格式的图像文件。<h2 id="四，表单标签（与用户进行交互）"><a href="#四，表单标签（与用户进行交互）" class="headerlink" title="四，表单标签（与用户进行交互）"></a>四，表单标签（与用户进行交互）</h2></li>
</ol>
<ul>
<li>表单是可以把浏览者输入的数据传送到服务器端，这样服务器端程序就可以处理表单传过来的数据。<br>语法：<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;传送方式&quot;</span> <span class="attr">action</span>=<span class="string">&quot;服务器文件&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
讲解：</li>
</ul>
<ol>
<li><code>&lt;form&gt; ：&lt;form&gt;</code>标签是成对出现的，以<code>&lt;form&gt;</code>开始，以<code>&lt;/form&gt;</code>结束。</li>
<li>action ：浏览者输入的数据被传送到的地方,比如一个PHP页面(save.php)。</li>
<li>method ： 数据传送的方式（get/post）。</li>
</ol>
<ul>
<li><code>&lt;input&gt;</code>输入框<br>文本输入框、密码输入框<br>当用户要在表单中键入字母、数字等内容时，就会用到文本输入框。文本框也可以转化为密码输入框。<br>语法：<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text/password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;名称&quot;</span> <span class="attr">value</span>=<span class="string">&quot;文本&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ul>
<ol>
<li>type：<br>当type=”text”时，输入框为文本输入框;<br>当type=”password”时, 输入框为密码输入框。</li>
<li>name：为文本框命名，以备后台程序ASP 、PHP使用。</li>
<li>value：为文本输入框设置默认值。(一般起到提示作用)</li>
</ol>
<ul>
<li>文本域，支持多行文本输入<br>当用户需要在表单中输入大段文字时，需要用到文本输入域。<br>语法：<br><code>&lt;textarea rows=&quot;行数&quot; cols=&quot;列数&quot;&gt;文本&lt;/textarea&gt;</code></li>
</ul>
<ol>
<li><code>&lt;textarea&gt;</code>标签是成对出现的，以<code>&lt;textarea&gt;</code>开始，以<code>&lt;/textarea&gt;</code>结束。</li>
<li>cols ：多行输入域的列数。</li>
<li>rows ：多行输入域的行数。</li>
</ol>
<ul>
<li>单选框，复选框<br>语法：<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio/checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;值&quot;</span> <span class="attr">name</span>=<span class="string">&quot;名称&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li>
</ul>
<ol>
<li> type:<br>当type=”radio”时，控件为单选框<br>当type=”checkbox”时，控件为复选框</li>
<li>value：提交数据到服务器的值（后台程序PHP使用）3.</li>
<li> name：为控件命名，以备后台程序ASP、PHP使用</li>
<li>checked：当设置checked=”checked”时，该选项被默认选中<br>注意：同一组的单选按钮，name取值一定要一致，这样同一组的单选按钮才可以起到单选的作用。</li>
</ol>
<ul>
<li>下拉列表框，节省空间<br>下拉列表在网页中也常会用到，它可以有效的节省网页空间。既可以单选、又可以多选。<br>语法：<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;提交值&quot;</span>&gt;</span>选项<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br></pre></td></tr></table></figure>
提交值是向服务器提交的值，选项是显示的值。<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;save.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>爱好:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;看书&quot;</span>&gt;</span>看书<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;旅游&quot;</span> <span class="attr">selected</span>=<span class="string">&quot;selected&quot;</span>&gt;</span>旅游<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;运动&quot;</span>&gt;</span>运动<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;购物&quot;</span>&gt;</span>购物<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li>使用下拉列表框进行多选<br>下拉列表也可以进行多选操作，在<code>&lt;select&gt;</code>标签中设置multiple=”multiple”属性，<br>就可以实现多选功能，进行多选时按下Ctrl键同时进行单击，可以选择多个选项。<br>如下代码：</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;save.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>爱好:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">multiple</span>=<span class="string">&quot;multiple&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;看书&quot;</span>&gt;</span>看书<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;旅游&quot;</span>&gt;</span>旅游<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;运动&quot;</span>&gt;</span>运动<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;购物&quot;</span>&gt;</span>购物<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>在表单中有两种按钮可以使用，分别为：提交按钮、重置。</li>
</ul>
<p>1.提交按钮：当用户需要提交表单信息到服务器时，需要用到提交按钮。<br>语法：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>type：只有当type值设置为submit时，按钮才有提交作用<br>value：按钮上显示的文字</p>
<ol start="2">
<li>重置按钮，重置表单信息<br>当用户需要重置表单信息到初始时的状态时，比如用户输入“用户名”后，发现书写有误，可以使用重置按钮使输入框恢复到初始状态。只需要把type设置为”reset”就可以。<br>语法：<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;重置&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
type：只有当type值设置为reset时，按钮才有重置作用<br>value：按钮上显示的文字<h2 id="五，css样式"><a href="#五，css样式" class="headerlink" title="五，css样式"></a>五，css样式</h2></li>
</ol>
<ul>
<li>认识css样式<br>CSS全称为“层叠样式表 (Cascading Style Sheets)”，它主要是用于定义HTML内容在浏览器内的显示样式，如文字大小、颜色、字体加粗等。<br>如下列代码：</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line"><span class="attribute">font-size</span>:<span class="number">12px</span>;</span><br><span class="line"><span class="attribute">color</span>:red;</span><br><span class="line"><span class="attribute">font-weight</span>:bold;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>使用CSS样式的一个好处是通过定义某个样式，可以让不同网页位置的文字有着统一的字体、字号或者颜色等。</p>
<ul>
<li>CSS代码语法<br>css 样式由选择符和声明组成，而声明又由属性和值组成<br>选择符{属性:值}<br><code>p&#123;color:red;&#125;</code></li>
</ul>
<ol>
<li>选择符：又称选择器，指明网页中要应用样式规则的元素，如本例中是网页中所有的段（p）的文字将变成蓝色，而其他的元素（如ol）不会受到影响。</li>
<li>声明：在英文大括号“｛｝”中的的就是声明，属性和值之间用英文冒号“：”分隔。当有多条声明时，中间可以英文分号“;”分隔，如下所示：<br><code>p&#123;font-size:12px;color:red;&#125;</code></li>
</ol>
<ul>
<li>从CSS 样式代码插入的形式来看基本可以分为以下3种：<br>内联式、嵌入式和外部式三种</li>
</ul>
<ol>
<li><p>内联式css样式<br>就是把css代码直接写在现有的HTML标签中，如下面代码：<br><code>&lt;p style=&quot;color:red&quot;&gt;这里文字是红色。&lt;/p&gt;</code><br>css样式代码要写在style=””双引号中，如果有多条css样式代码设置可以写在一起，中间用分号隔开。如下代码：<br><code>&lt;p style=&quot;color:red;font-size:12px&quot;&gt;这里文字是红色。&lt;/p&gt;</code></p>
</li>
<li><p>嵌入式css样式，<br>就是可以把css样式代码写在<style type="text/css"></style>标签之间。如下面代码实现把三个<span>标签中的文字设置为红色：</span></p>
<style type="text/css">
span{
color:red;
}
</style>
<p>嵌入式css样式必须写在<style></style>之间，并且一般情况下嵌入式css样式写在<head></head>之间。</p>
</li>
<li><p>外部式css样式<br>写在单独的一个文件中<br>外部式css样式(也可称为外联式)就是把css代码写一个单独的外部文件中，这个css样式文件以“.css”为扩展名，在<code>&lt;head&gt;</code>内（不是在<code>&lt;style&gt;</code>标签内）使用<link>标签将css样式文件链接到HTML文件内，如下面代码：<br><code>&lt;link href=&quot;base.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;</code><br>注意：</p>
</li>
<li><p>css样式文件名称以有意义的英文字母命名，如 main.css。</p>
</li>
<li><p>rel=”stylesheet” type=”text/css” 是固定写法不可修改。</p>
</li>
<li><link>标签位置一般写在<head>标签之内。</head></li>
</ol>
<ul>
<li>CSS选择器<br>每一条css样式定义由两部分组成，形式如下：<br>选择器{<br>样式;<br>}<br>在{}之前的部分就是“选择器”，“选择器”指明了{}中的“样式”的作用对象，也就是“样式”作用于网页中的哪些元素<h2 id="六，-标签选择器"><a href="#六，-标签选择器" class="headerlink" title="六， 标签选择器"></a>六， 标签选择器</h2>标签选择器其实就是html代码中的标签。如右侧代码编辑器中的<code>&lt;html&gt;、&lt;body&gt;、&lt;h1&gt;、&lt;p&gt;、&lt;img&gt;</code>。例如下面代码：<br><code>p&#123;font-size:12px;line-height:1.6em;&#125;</code><br>上面的css样式代码的作用：为p标签设置12px字号，行间距设置1.6em的样式。</li>
<li>类选择器<br>类选择器在css样式编码中是最常用到的，如右侧代码编辑器中的代码:可以实现为“胆小如鼠”、“勇气”字体设置为红色。<br>语法：<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">.类选器名称&#123;css样式代码;&#125;</span><br></pre></td></tr></table></figure>
注意：</li>
</ul>
<ol>
<li>英文圆点开头</li>
<li>其中类选器名称可以任意起名（但不要起中文噢）<br>使用方法：<br>第一步：使用合适的标签把要修饰的内容标记起来，如下：<br><code>&lt;span&gt;胆小如鼠&lt;/span&gt;</code><br>第二步：使用class=”类选择器名称”为标签设置一个类，如下：<br><code>&lt;span class=&quot;stress&quot;&gt;胆小如鼠&lt;/span&gt;</code><br>第三步：设置类选器css样式，如下：<br><code>.stress&#123;color:red;&#125;/*类前面要加入一个英文圆点*/</code></li>
</ol>
<ul>
<li>ID选择器<br>在很多方面，ID选择器都类似于类选择符，但也有一些重要的区别：</li>
</ul>
<ol>
<li>为标签设置id=”ID名称”，而不是class=”类名称”。</li>
<li>ID选择符的前面是井号（#）号，而不是英文圆点（.）。</li>
</ol>
<ul>
<li>类和ID选择器的区别<br>相同点：可以应用于任何元素<br>不同点：</li>
</ul>
<ol>
<li>ID选择器只能在文档中使用一次。与类选择器不同，在一个HTML文档中，ID选择器只能使用一次，而且仅一次。而类选择器可以使用多次。<br>下面代码是正确的：<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>三年级时，我还是一个<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;stress&quot;</span>&gt;</span>胆小如鼠<span class="tag">&lt;/<span class="name">span</span>&gt;</span>的小女孩，上课从来不敢回答老师提出的问题，生怕回答错了老师会批评我。就一直没有这个<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;stress&quot;</span>&gt;</span>勇气<span class="tag">&lt;/<span class="name">span</span>&gt;</span>来回答老师提出的问题。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>
而下面代码是错误的：<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>三年级时，我还是一个<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;stress&quot;</span>&gt;</span>胆小如鼠<span class="tag">&lt;/<span class="name">span</span>&gt;</span>的小女孩，上课从来不敢回答老师提出的问题，生怕回答错了老师会批评我。就一直没有这个<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;stress&quot;</span>&gt;</span>勇气<span class="tag">&lt;/<span class="name">span</span>&gt;</span>来回答老师提出的问题。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li>可以使用类选择器词列表方法为一个元素同时设置多个样式。我们可以为一个元素同时设多个样式，但只可以用类选择器的方法实现，ID选择器是不可以的（不能使用 ID 词列表）。<br>下面的代码是正确的(完整代码见右侧代码编辑器)<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">.stress&#123;</span><br><span class="line">color:red;</span><br><span class="line">&#125;</span><br><span class="line">.bigsize&#123;</span><br><span class="line">font-size:25px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>到了<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;stress bigsize&quot;</span>&gt;</span>三年级<span class="tag">&lt;/<span class="name">span</span>&gt;</span>下学期时，我们班上了一节公开课...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>
上面代码的作用是为“三年级”三个文字设置文本颜色为红色并且字号为25px<br>下面的代码是不正确的(完整代码见右侧代码编辑器)<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">#stressid&#123;</span><br><span class="line">color:red;</span><br><span class="line">&#125;</span><br><span class="line">#bigsizeid&#123;</span><br><span class="line">font-size:25px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>到了<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;stressid bigsizeid&quot;</span>&gt;</span>三年级<span class="tag">&lt;/<span class="name">span</span>&gt;</span>下学期时，我们班上了一节公开课...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>
上面代码不可以实现为“三年级”三个文字设置文本颜色为红色并且字号为25px的作用。</li>
</ol>
<ul>
<li>子选择器<br>还有一个比较有用的选择器子选择器，即大于符号(&gt;),用于选择指定标签元素的子元素。如下面的代码：<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.food</span>&gt;<span class="selector-tag">li</span>&#123;<span class="attribute">border</span>:<span class="number">1px</span> solid red;&#125;</span><br></pre></td></tr></table></figure>
这行代码会使class名为food下的子元素li加入红色实线边框。</li>
<li>包含(后代)选择器<br>包含选择器，即加入空格,用于选择指定标签元素下的后辈元素。如右侧代码编辑器中的代码：<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.first</span> <span class="selector-tag">span</span>&#123;<span class="attribute">color</span>:red;&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<p>请注意这个选择器与子选择器的  <strong>区别</strong></p>
<ol>
<li>子选择器（child selector）仅是指它的直接后代，或者你可以理解为作用于子元素的第一代后代</li>
<li>后代选择器是作用于所有子后代元素。后代选择器通过空格来进行选择，而子选择器是通过“&gt;”进行选择。<br>总结：&gt;作用于元素的第一代后代，空格作用于元素的所有后代。</li>
</ol>
<ul>
<li>通用选择器<br>通用选择器是功能最强大的选择器，它使用一个（*）号指定，它的作用是匹配html中任意标签元素，如下使用下面代码使用html中任意标签元素字体颜色全部设置为红色：</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&#123;<span class="attribute">color</span>:red;&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>伪类选择符<br>更有趣的是伪类选择符，为什么叫做伪类选择符，它允许给html不存在的标签设置样式，比如说我们给html中一个标签元素的鼠标滑过的状态来设置字体颜色：<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">color</span>:red;&#125;</span><br></pre></td></tr></table></figure>
这行代码会使被<code>&lt;a&gt;&lt;/a&gt;</code>标签包裹的文字内容中的“胆小如鼠”字体颜色在鼠标滑过时变为红色。</li>
<li>分组选择符<br>当你想为html中多个标签元素设置同一个样式时，可以使用分组选择符（，），如下代码为右侧代码编辑器中的h1、span标签同时设置字体颜色为红色：<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">h1</span>,<span class="selector-tag">span</span>&#123;<span class="attribute">color</span>:red;&#125;</span><br></pre></td></tr></table></figure>
它相当于下面两行代码：</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">h1</span>&#123;<span class="attribute">color</span>:red;&#125;</span><br><span class="line"><span class="selector-tag">span</span>&#123;<span class="attribute">color</span>:red;&#125;</span><br></pre></td></tr></table></figure>

<h2 id="七，-CSS的继承、层叠和特殊性。"><a href="#七，-CSS的继承、层叠和特殊性。" class="headerlink" title="七， CSS的继承、层叠和特殊性。"></a>七， CSS的继承、层叠和特殊性。</h2><ul>
<li><p>CSS的某些样式是具有继承性的，那么什么是继承呢？继承是一种规则，它允许样式不仅应用于某个特定html标签元素，而且应用于其后代。比如下面代码：如某种颜色应用于p标签，这个颜色设置不仅应用p标签，还应用于p标签中的所有子元素文本，这里子元素为span标签。<br>但注意有一些css样式是不具有继承性的。如<code>border:1px solid red</code>;</p>
</li>
<li><p>根据权值来判断使用哪个css样式<br>浏览器是根据权值来判断使用哪种css样式的，权值高的就使用哪种css样式。<br>下面是权值的规则：<br>标签的权值为1，类选择符的权值为10，ID选择符的权值最高为100。例如下面的代码：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;<span class="attribute">color</span>:red;&#125; <span class="comment">/*权值为1*/</span></span><br><span class="line"><span class="selector-tag">p</span> <span class="selector-tag">span</span>&#123;<span class="attribute">color</span>:green;&#125; <span class="comment">/*权值为1+1=2*/</span></span><br><span class="line"><span class="selector-class">.warning</span>&#123;<span class="attribute">color</span>:white;&#125; <span class="comment">/*权值为10*/</span></span><br><span class="line"><span class="selector-tag">p</span> <span class="selector-tag">span</span><span class="selector-class">.warning</span>&#123;<span class="attribute">color</span>:purple;&#125; <span class="comment">/*权值为1+1+10=12*/</span></span><br><span class="line"><span class="selector-id">#footer</span> <span class="selector-class">.note</span> <span class="selector-tag">p</span>&#123;<span class="attribute">color</span>:yellow;&#125; <span class="comment">/*权值为100+10+1=111*/</span></span><br></pre></td></tr></table></figure>
<p>注意：还有一个权值比较特殊–继承也有权值但很低，有的文献提出它只有0.1，所以可以理解为继承的权值最低</p>
</li>
<li><p>层叠<br>我们来思考一个问题：如果在html文件中对于同一个元素可以有多个css样式存在并且这多个css样式具有相同权重值怎么办？好，这一小节中的层叠帮你解决这个问题。<br>层叠就是在html文件中对于同一个元素可以有多个css样式存在，当有相同权重的样式存在时，会根据这些css样式的前后顺序来决定，处于最后面的css样式会被应用。<br>如下面代码:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">p&#123;color:red;&#125;</span><br><span class="line">p&#123;color:green;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;first&quot;</span>&gt;</span>三年级时，我还是一个<span class="tag">&lt;<span class="name">span</span>&gt;</span>胆小如鼠<span class="tag">&lt;/<span class="name">span</span>&gt;</span>的小女孩。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>最后 p 中的文本会设置为green，这个层叠很好理解，理解为后面的样式会覆盖前面的样式。<br>所以前面的css样式优先级就不难理解了：<br>内联样式表（标签内部）&gt; 嵌入样式表（当前文件中）&gt; 外部样式表（外部文件中）。</p>
</li>
<li><p>重要性<br>我们在做网页代码的时，有些特殊的情况需要为某些样式设置具有最高权值，怎么办？这时候我们可以使用!important来解决。<br>如下代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">p&#123;color:red!important;&#125;</span><br><span class="line">p&#123;color:green;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;first&quot;</span>&gt;</span>三年级时，我还是一个<span class="tag">&lt;<span class="name">span</span>&gt;</span>胆小如鼠<span class="tag">&lt;/<span class="name">span</span>&gt;</span>的小女孩。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>这时 p 段落中的文本会显示的red红色。<br>注意：!important要写在分号的前面</p>
<h2 id="八，CSS格式化排版"><a href="#八，CSS格式化排版" class="headerlink" title="八，CSS格式化排版"></a>八，CSS格式化排版</h2></li>
<li><p>文字排版</p>
<p>1.文字排版–字体<br>我们可以使用css样式为网页中的文字设置字体、字号、颜色等样式属性。下面我们来看一个例子，下面代码实现：为网页中的文字设置字体为宋体。<br><code>body&#123;font-family:&quot;宋体&quot;;&#125;</code><br>这里注意不要设置不常用的字体，因为如果用户本地电脑上如果没有安装你设置的字体，就会显示浏览器默认的字体。（因为用户是否可以看到你设置的字体样式取决于用户本地电脑上是否安装你设置的字体。</p>
</li>
</ul>
<ol start="2">
<li>文字排版–字号、颜色<br>可以使用下面代码设置网页中文字的字号为12像素，并把字体颜色设置为#666(灰色)：<br><code>body&#123;font-size:12px;color:#666&#125;</code></li>
</ol>
<ol start="3">
<li>文字排版–粗体<br>我们还可以使用css样式来改变文字的样式：粗体、斜体、下划线、删除线，可以使用下面代码实现设置文字以粗体样式显示出来。<br>p span{font-weight:bold;}</li>
<li>文字排版–斜体<br>以下代码可以实现文字以斜体样式在浏览器中显示：<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">p a&#123;font-style:italic;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>三年级时，我还是一个<span class="tag">&lt;<span class="name">a</span>&gt;</span>胆小如鼠<span class="tag">&lt;/<span class="name">a</span>&gt;</span>的小女孩。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li>文字排版–下划线<br>有些情况下想为文字设置为下划线样式，这样可以在视觉上强调文字，可以使用下面代码来实现：<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">p a&#123;text-decoration:underline;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>三年级时，我还是一个<span class="tag">&lt;<span class="name">a</span>&gt;</span>胆小如鼠<span class="tag">&lt;/<span class="name">a</span>&gt;</span>的小女孩。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">删除线，在电商网站上经常见。</span><br><span class="line">p a&#123;text-decoration:line-through;&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<ul>
<li>段落排版</li>
</ul>
<ol>
<li><p>段落排版–缩进<br>中文文字中的段前习惯空两个文字的空白，这个特殊的样式可以用下面代码来实现：<br><code>p&#123;text-indent:2em;&#125;</code><br>注意：2em的意思就是文字的2倍大小。</p>
<p>2.段落排版–行间距<br>这一小节我们来学习一下另一个在段落排版中起重要作用的行间距属性（line-height），如下代码实现设置段落行间距为1.5倍。<br><code>p&#123;line-height:1.5em;&#125;</code></p>
</li>
<li><p>段落排版–字间距、字母间距<br>文字间隔、字母间隔设置：<br>如果想在网页排版中设置文字间隔或者字母间隔就可以使用 letter-spacing来实现，如下面代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">h1&#123;</span><br><span class="line">letter-spacing:50px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>了不起的盖茨比<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>注意：这个样式使用在英文单词时，是设置字母与字母之间的间距。<br>单词间距设置：<br>如果我想设置英文单词之间的间距呢？可以使用word-spacing来实现。如下代码：</p>
</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">h1&#123;</span><br><span class="line">word-spacing:50px;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>welcome to imooc!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="九，CSS盒模型"><a href="#九，CSS盒模型" class="headerlink" title="九，CSS盒模型"></a>九，CSS盒模型</h2><ul>
<li>元素分类<br>在讲解CSS布局之前，我们需要提前知道一些知识，在CSS中，html中的标签元素大体被分为三种不同的类型：块状元素、内联元素和内联块状元素。<br>常用的块状元素有：<br><code>&lt;div&gt;、&lt;p&gt;、&lt;h1&gt;...&lt;h6&gt;、&lt;ol&gt;、&lt;ul&gt;、&lt;dl&gt;、&lt;table&gt;、&lt;address&gt;、&lt;blockquote&gt; 、&lt;form&gt;</code><br>常用的内联元素有：<br><code>&lt;a&gt;、&lt;span&gt;、&lt;br&gt;、&lt;i&gt;、&lt;em&gt;、&lt;strong&gt;、&lt;label&gt;、&lt;q&gt;、&lt;var&gt;、&lt;cite&gt;、&lt;code&gt;</code><br>常用的内联块状元素有：<br><code>&lt;img&gt;、&lt;input&gt;</code></li>
<li>元素分类–块级元素<br>什么是块级元素？在html中<code>&lt;div&gt;、 &lt;p&gt;、&lt;h1&gt;、&lt;form&gt;、&lt;ul&gt; </code>和 <code>&lt;li&gt;</code>就是块级元素。设置display:block就是将元素显示为块级元素。如下代码就是将行内元素a转换为块状元素，从页使用a元素具有块状元素特点。<br><code>a&#123;display:block;&#125;</code><br>块级元素特点：</li>
</ul>
<ol>
<li>每个块级元素都从新的一行开始，并且其后的元素也另起一行。（真霸道，一个块级元素独占一行）</li>
<li>元素的高度、宽度、行高以及顶和底边距都可设置。</li>
<li>元素宽度在不设置的情况下，是它本身父容器的100%（和父元素的宽度一致），除非设定一个宽度。</li>
</ol>
<ul>
<li>元素分类–行内元素<br>在html中，<code>&lt;span&gt;、&lt;a&gt;、&lt;label&gt;、&lt;input&gt;、 &lt;img&gt;、 &lt;strong&gt; </code>和<code>&lt;em&gt;</code>就是典型的行内元素（inline）元素。当然块状元素也可以通过代码display:inline将元素设置为行内元素。<br>行内元素特点：<ol>
<li>和其他元素都在一行上；</li>
<li>元素的高度、宽度、行高及顶部和底部边距不可设置；</li>
<li>元素的宽度就是它包含的文字或图片的宽度，不可改变。</li>
</ol>
</li>
<li>元素分类–内联块状元素<br>内联块状元素（inline-block）就是同时具备内联元素、块状元素的特点，代码display:inline-block就是将元素设置为内联块状元素。(css2.1新增)，<code>&lt;img&gt;、&lt;input&gt;</code>标签就是这种内联块状标签。<br>inline-block元素特点：<ol>
<li>和其他元素都在一行上；</li>
<li>元素的高度、宽度、行高以及顶和底边距都可设置。</li>
</ol>
</li>
<li>盒模型–边框（一）<br>盒子模型的边框就是围绕着内容及补白的线，这条线你可以设置它的粗细、样式和颜色(边框三个属性)。<br>如下面代码为div来设置边框粗细为2px、样式为实心的、颜色为红色的边框：<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line"><span class="attribute">border</span>:<span class="number">2px</span> solid red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
上面是border代码的缩写形式，可以分开写：<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line"><span class="attribute">border-width</span>:<span class="number">2px</span>;</span><br><span class="line"><span class="attribute">border-style</span>:solid;</span><br><span class="line"><span class="attribute">border-color</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
注意：</li>
</ul>
<ol>
<li>border-style（边框样式）常见样式有：<br>dashed（虚线）| dotted（点线）| solid（实线）。</li>
<li>border-color（边框颜色）中的颜色可设置为十六进制颜色，如:<br><code>border-color:#888;//前面的井号不要忘掉。</code></li>
</ol>
<ul>
<li>盒模型–边框（二）<br>现在有一个问题，如果有想为p标签单独设置下边框，而其它三边都不设置边框样式怎么办呢？css样式中允许只为一个方向的边框设置样式：<br><code>div&#123;border-bottom:1px solid red;&#125;</code><br>同样可以使用下面代码实现其它三边上、右、左边框的设置：<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">border-top</span>:<span class="number">1px</span> solid red;</span><br><span class="line"><span class="attribute">border-right</span>:<span class="number">1px</span> solid red;</span><br><span class="line"><span class="attribute">border-left</span>:<span class="number">1px</span> solid red;</span><br></pre></td></tr></table></figure></li>
<li>盒模型–边界<br>元素与其它元素之间的距离可以使用边界（margin）来设置。边界也是可分为上、右、下、左。如下代码：<br><code>div&#123;margin:20px 10px 15px 30px;&#125;</code><br>也可以分开写：<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line"><span class="attribute">margin-top</span>:<span class="number">20px</span>;</span><br><span class="line"><span class="attribute">margin-right</span>:<span class="number">10px</span>;</span><br><span class="line"><span class="attribute">margin-bottom</span>:<span class="number">15px</span>;</span><br><span class="line"><span class="attribute">margin-left</span>:<span class="number">30px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
如果上下左右的边界都为10px;可以这么写：<br><code>div&#123; margin:10px;&#125;</code><br>如果上下边界一样为10px，左右一样为20px，可以这么写：<br><code>div&#123; margin:10px 20px;&#125;</code><br>总结一下：padding和margin的区别，padding在边框里，margin在边框外。</li>
<li>盒模型–填充<br>元素内容与边框之间是可以设置距离的，称之为填充。填充也可分为上、右、下、左。如下代码：<br><code>div&#123;padding:20px 10px15px 30px;&#125;</code><br>顺序一定不要搞混。可以分开写上面代码：<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line"><span class="attribute">padding-top</span>:<span class="number">20px</span>;</span><br><span class="line"><span class="attribute">padding-right</span>:<span class="number">10px</span>;</span><br><span class="line"><span class="attribute">padding-bottom</span>:<span class="number">15px</span>;</span><br><span class="line"><span class="attribute">padding-left</span>:<span class="number">30px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
如果上、右、下、左的填充都为10px;可以这么写<br><code>div&#123;padding:10px;&#125;</code><br>如果上下填充一样为10px，左右一样为20px，可以这么写：<br><code>div&#123;padding:10px 20px;&#125;</code></li>
<li>盒模型代码简写<br>还记得在讲盒模型时外边距(margin)、内边距(padding)和边框(border)设置上下左右四个方向的边距是按照顺时针方向设置的：上右下左。具体应用在margin和padding的例子如下：<br><code>margin:10px 15px 12px 14px;/*上设置为10px、右设置为15px、下设置为12px、左设置为14px*/</code><br>通常有下面三种缩写方法:<ol>
<li>如果top、right、bottom、left的值相同，如下面代码：<br><code>margin:10px 10px 10px 10px;</code><br>可缩写为：<br><code>margin:10px; </code></li>
<li>如果top和bottom值相同、left和 right的值相同，如下面代码：<br><code>margin:10px 20px 10px 20px;</code><br>可缩写为：<br><code>margin:10px 20px;</code></li>
<li>如果left和right的值相同，如下面代码：<br><code>margin:10px 20px 30px 20px;</code><br>可缩写为：<br><code>margin:10px 20px 30px;</code><br>注意：padding、border的缩写方法和margin是一致的。</li>
</ol>
</li>
<li>颜色值缩写<br>关于颜色的css样式也是可以缩写的，当你设置的颜色是16进制的色彩值时，如果每两位的值相同，可以缩写一半。<br>例子1：<br><code>p&#123;color:#000000;&#125;</code><br>可以缩写为：<br><code>p&#123;color: #000;&#125;</code><br>例子2：<br><code>p&#123;color: #336699;&#125;</code><br>可以缩写为：<br><code>p&#123;color: #369;&#125;</code><h2 id="十，CSS布局模型"><a href="#十，CSS布局模型" class="headerlink" title="十，CSS布局模型"></a>十，CSS布局模型</h2></li>
<li>css布局模型<br>清楚了CSS 盒模型的基本概念、 盒模型类型， 我们就可以深入探讨网页布局的基本模型了。布局模型与盒模型一样都是 CSS 最基本、 最核心的概念。 但布局模型是建立在盒模型基础之上，又不同于我们常说的 CSS 布局样式或 CSS 布局模板。如果说布局模型是本，那么 CSS 布局模板就是末了，是外在的表现形式。<br>CSS包含3种基本的布局模型，用英文概括为：Flow、Layer 和 Float。<br>在网页中，元素有三种布局模型：<ol>
<li>流动模型（Flow）</li>
<li>浮动模型 (Float)</li>
<li>层模型（Layer）</li>
</ol>
</li>
<li>流动模型（一）<br>流动（Flow）：自上而下。<br>先来说一说流动模型，流动（Flow）是默认的网页布局模式。也就是说网页在默认状态下的 HTML 网页元素都是根据流动模型来分布网页内容的。<br>流动布局模型具有2个比较典型的特征：</li>
</ul>
<ol>
<li>第一点，块状元素都会在所处的包含元素内自上而下按顺序垂直延伸分布，因为在默认状态下，块状元素的宽度都为100%。实际上，块状元素都会以行的形式占据位置。如右侧代码编辑器中三个块状元素标签(div，h1，p)宽度显示为100%。</li>
<li>第二点，在流动模型下，内联元素都会在所处的包含元素内从左到右水平分布显示。（内联元素可不像块状元素这么霸道独占一行）<br>右侧代码编辑器中内联元素标签a、span、em、strong都是内联元素。</li>
</ol>
<ul>
<li>浮动模型<br>块状元素这么霸道都是独占一行，如果现在我们想让两个块状元素并排显示，怎么办呢？不要着急，设置元素浮动就可以实现这一愿望。任何元素在默认情况下是不能浮动的，但可以用CSS定义为浮动，如div、p、table、img等元素都可以被定义为浮动。如下代码可以实现两个div元素一行显示。<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line"><span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line"><span class="attribute">height</span>:<span class="number">200px</span>;</span><br><span class="line"><span class="attribute">border</span>:<span class="number">2px</span> red solid;</span><br><span class="line"><span class="attribute">float</span><span class="selector-pseudo">:left</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="selector-tag">div</span> id=&quot;div1&quot;&gt;&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">div</span> id=&quot;div2&quot;&gt;&lt;/<span class="selector-tag">div</span>&gt;</span><br></pre></td></tr></table></figure>
注意：设置浮动的同时一定要先设置块状元素的宽度，且需要浮动的几个元素宽度加起来一定要小于容器元素的宽度。</li>
<li>什么是层模型？<br>什么是层布局模型？层布局模型就像是图像软件PhotoShop中非常流行的图层编辑功能一样，每个图层能够精确定位操作，但在网页设计领域，由于网页大小的活动性，层布局没能受到热捧。但是在网页上局部使用层布局还是有其方便之处的。下面我们来学习一下html中的层布局。<br>如何让html元素在网页中精确定位，就像图像软件PhotoShop中的图层一样可以对每个图层能够精确定位操作。CSS定义了一组定位（positioning）属性来支持层布局模型。<br>层模型有三种形式：<ol>
<li>绝对定位(position: absolute)</li>
<li>相对定位(position: relative)</li>
<li>固定定位(position: fixed)</li>
</ol>
</li>
</ul>
<ol>
<li>层模型–绝对定位（相对于父类）<br>如果想为元素设置层模型中的绝对定位，需要设置position:absolute(表示绝对定位)，这条语句的作用将元素从文档流中拖出来，然后使用left、right、top、bottom属性相对于其最接近的一个具有定位属性的父包含块进行绝对定位。如果不存在这样的包含块，则相对于body元素，即相对于浏览器窗口。<br>如下面代码可以实现div元素相对于浏览器窗口向右移动100px，向下移动50px。<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line"><span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line"><span class="attribute">height</span>:<span class="number">200px</span>;</span><br><span class="line"><span class="attribute">border</span>:<span class="number">2px</span> red solid;</span><br><span class="line"><span class="attribute">position</span>:absolute;</span><br><span class="line"><span class="attribute">left</span>:<span class="number">100px</span>;</span><br><span class="line"><span class="attribute">top</span>:<span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="selector-tag">div</span> id=&quot;div1&quot;&gt;&lt;/<span class="selector-tag">div</span>&gt;</span><br></pre></td></tr></table></figure></li>
<li>层模型–相对定位（相对于以前）<br>如果想为元素设置层模型中的相对定位，需要设置position:relative（表示相对定位），它通过left、right、top、bottom属性确定元素在正常文档流中的偏移位置。相对定位完成的过程是首先按static(float)方式生成一个元素(并且元素像层一样浮动了起来)，然后相对于以前的位置移动，移动的方向和幅度由left、right、top、bottom属性确定，偏移前的位置保留不动。<br>如下代码实现相对于以前位置向下移动50px，向右移动100px;<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#div1</span>&#123;</span><br><span class="line"><span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line"><span class="attribute">height</span>:<span class="number">200px</span>;</span><br><span class="line"><span class="attribute">border</span>:<span class="number">2px</span> red solid;</span><br><span class="line"><span class="attribute">position</span>:relative;</span><br><span class="line"><span class="attribute">left</span>:<span class="number">100px</span>;</span><br><span class="line"><span class="attribute">top</span>:<span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="selector-tag">div</span> id=&quot;div1&quot;&gt;&lt;/<span class="selector-tag">div</span>&gt;</span><br></pre></td></tr></table></figure></li>
<li>层模型–固定定位（相对于网页窗口）<br>固定住某一坐标。<br>fixed：表示固定定位，与absolute定位类型类似，但它的相对移动的坐标是视图（屏幕内的网页窗口）本身。由于视图本身是固定的，它不会随浏览器窗口的滚动条滚动而变化，除非你在屏幕中移动浏览器窗口的屏幕位置，或改变浏览器窗口的显示大小，因此固定定位的元素会始终位于浏览器窗口内视图的某个位置，不会受文档流动影响，这与background-attachment:fixed?属性功能相同。以下代码可以实现相对于浏览器视图向右移动100px，向下移动50px。并且拖动滚动条时位置固定不变。<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-id">#div1</span>&#123;</span><br><span class="line"><span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line"><span class="attribute">height</span>:<span class="number">200px</span>;</span><br><span class="line"><span class="attribute">border</span>:<span class="number">2px</span> red solid;</span><br><span class="line"><span class="attribute">position</span>:fixed;</span><br><span class="line"><span class="attribute">left</span>:<span class="number">100px</span>;</span><br><span class="line"><span class="attribute">top</span>:<span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<ul>
<li>Relative与Absolute组合使用<br>小伙伴们学习了12-6小节的相对定位的方法：使用position:absolute可以实现被设置元素相对于浏览器（body）设置定位以后，大家有没有想过可不可以相对于其它元素进行定位呢？答案是肯定的，当然可以。使用position:relative来帮忙，但是必须遵守下面规范：</li>
</ul>
<ol>
<li>参照定位的元素必须是相对定位元素的前辈元素：<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="comment">&lt;!--参照定位的元素--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box2&quot;</span>&gt;</span>相对参照元素进行定位<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!--相对定位元素--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
从上面代码可以看出box1是box2的父元素（父元素当然也是前辈元素了）。</li>
<li>参照定位的元素必须加入position:relative;<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#box1</span>&#123;</span><br><span class="line"><span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line"><span class="attribute">height</span>:<span class="number">200px</span>;</span><br><span class="line"><span class="attribute">position</span>:relative;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>定位元素加入position:absolute，便可以使用top、bottom、left、right来进行偏移定位了。<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#box2</span>&#123;</span><br><span class="line"><span class="attribute">position</span>:absolute;</span><br><span class="line"><span class="attribute">top</span>:<span class="number">20px</span>;</span><br><span class="line"><span class="attribute">left</span>:<span class="number">30px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
这样box2就可以相对于父元素box1定位了（这里注意参照物就可以不是浏览器了，而可以自由设置了）。</li>
</ol>
<p>转载于作者：苏梦苓<br>链接：<a href="https://www.zhihu.com/question/406459509/answer/1673571297">https://www.zhihu.com/question/406459509/answer/1673571297</a></p>
]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>css</tag>
      </tags>
  </entry>
</search>
